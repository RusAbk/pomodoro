workflows:
  ios-debug-workflow:
    name: iOS Debug (unsigned IPA)
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        BUNDLE_ID: "com.yourname.pomodorotimer"
        APP_NAME: "Pomodoro Timer"
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods

    scripts:
      - name: Prepare Flutter
        script: |
          set -euxo pipefail
          flutter clean
          flutter pub get

      - name: Build iOS DEBUG (.app) without codesign
        script: |
          set -euxo pipefail
          # Сборка под устройство (iphoneos), без подписи
          flutter build ios --debug --no-codesign

          # Проверяем, что появился .app для iphoneos
          APP_PATH=$(find build/ios/iphoneos -maxdepth 2 -type d -name "*.app" | head -n1)
          if [ -z "$APP_PATH" ]; then
            echo "ERROR: .app was not produced"; exit 1
          fi
          echo "Found app: $APP_PATH"

          # Пакуем .app в .ipa вручную
          WORKDIR="build/ios/ipa"
          rm -rf "$WORKDIR"
          mkdir -p "$WORKDIR/Payload"
          cp -R "$APP_PATH" "$WORKDIR/Payload/"

          pushd "$WORKDIR" >/dev/null
          /usr/bin/zip -qry Runner-debug-unsigned.ipa Payload
          popd >/dev/null

          echo "Unsigned Debug IPA at: $WORKDIR/Runner-debug-unsigned.ipa"
          ls -la "$WORKDIR"

      - name: Verify architectures (debug)
        script: |
          set -euxo pipefail
          IPA=$(ls build/ios/ipa/*.ipa | head -n1)
          [ -n "$IPA" ] || { echo "No IPA found"; exit 1; }

          rm -rf /tmp/ipa_check_dbg
          mkdir -p /tmp/ipa_check_dbg
          unzip -q "$IPA" -d /tmp/ipa_check_dbg

          echo "== Runner binary archs (debug) =="
          lipo -info /tmp/ipa_check_dbg/Payload/Runner.app/Runner || true

          echo "== Frameworks archs (debug) =="
          if [ -d /tmp/ipa_check_dbg/Payload/Runner.app/Frameworks ]; then
            find /tmp/ipa_check_dbg/Payload/Runner.app/Frameworks -name '*.framework' -maxdepth 1 -type d | while read -r FW; do
              BIN="$FW/$(basename "$FW" .framework)"
              if [ -f "$BIN" ]; then
                echo ">> $(basename "$FW")"
                lipo -info "$BIN" || true
              fi
            done
          else
            echo "No Frameworks dir"
          fi

      - name: List outputs (diagnostic)
        script: |
          set -eux
          ls -la build || true
          ls -la build/ios || true
          ls -la build/ios/ipa || true
          find build -type f -name '*.ipa' -print || true
          find build -type d -name '*.app' -print || true

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/iphoneos/*.app
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log

    publishing:
      email:
        recipients:
          - your-email@example.com
        notify:
          success: true
          failure: true

  ios-workflow:
    name: iOS Workflow
    max_build_duration: 60
    instance_type: mac_mini_m1
    # integrations:
    #   app_store_connect: codemagic
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        # Замените на ваши данные
        BUNDLE_ID: "com.yourname.pomodorotimer"
        APP_NAME: "Pomodoro Timer"
      groups:
        - appstore_credentials
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/.gradle/caches
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events:
        - push
        - tag
      branch_patterns:
        - pattern: develop
          include: true
          source: true
    scripts:
      - name: Get Flutter packages
        script: |
          flutter pub get

      - name: Build iOS (unsigned) and always produce IPA
        script: |
          set -euxo pipefail

          flutter clean
          flutter pub get

          # ГАРАНТИРОВАННО собираем arm64 для устройства
          if flutter build ipa --release --no-codesign --target-platform=ios; then
            echo "Flutter produced IPA successfully."
            IPA_DIR="build/ios/ipa"
            if ls "$IPA_DIR"/*.ipa >/dev/null 2>&1; then
              echo "Found IPA(s) in $IPA_DIR"
              exit 0
            fi
          fi

          echo "Fallback: build .app and package into unsigned .ipa manually"

          flutter build ios --release --no-codesign

          APP_PATH=$(find build/ios/iphoneos -maxdepth 2 -type d -name "*.app" | head -n1)
          if [ -z "$APP_PATH" ]; then
            echo "ERROR: .app was not produced"; exit 1
          fi
          echo "Found app: $APP_PATH"

          WORKDIR="build/ios/ipa"
          rm -rf "$WORKDIR"
          mkdir -p "$WORKDIR/Payload"
          cp -R "$APP_PATH" "$WORKDIR/Payload/"

          pushd "$WORKDIR" >/dev/null
          /usr/bin/zip -qry Runner-unsigned.ipa Payload
          popd >/dev/null

          echo "Unsigned IPA at: $WORKDIR/Runner-unsigned.ipa"
          ls -la "$WORKDIR"

      - name: List outputs (diagnostic)
        script: |
          set -eux
          ls -la build || true
          ls -la build/ios || true
          ls -la build/ios/ipa || true
          find build -type f -name '*.ipa' -print || true
          find build -type d -name '*.app' -print || true

      - name: Verify architectures in IPA
        script: |
          set -euxo pipefail
          IPA=$(ls build/ios/ipa/*.ipa | head -n1)
          [ -n "$IPA" ] || { echo "No IPA found"; exit 1; }

          rm -rf /tmp/ipa_check
          mkdir -p /tmp/ipa_check
          unzip -q "$IPA" -d /tmp/ipa_check

          echo "== Runner binary archs =="
          lipo -info /tmp/ipa_check/Payload/Runner.app/Runner

          echo "== Frameworks archs =="
          if [ -d /tmp/ipa_check/Payload/Runner.app/Frameworks ]; then
            find /tmp/ipa_check/Payload/Runner.app/Frameworks -name '*.framework' -maxdepth 1 -type d | while read -r FW; do
              BIN="$FW/$(basename "$FW" .framework)"
              if [ -f "$BIN" ]; then
                echo ">> $(basename "$FW")"
                lipo -info "$BIN" || true
              fi
            done
          else
            echo "No Frameworks dir"
          fi
    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/iphoneos/*.app
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - your-email@example.com
        notify:
          success: true
          failure: true

  ios-release-workflow:
    name: iOS Release
    max_build_duration: 120
    instance_type: mac_mini_m1
    # integrations:
    #   app_store_connect: codemagic
    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        BUNDLE_ID: "com.yourname.pomodorotimer"
        APP_NAME: "Pomodoro Timer"
      groups:
        - appstore_credentials
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: v*.*.*
          include: true
    scripts:
      - name: Set up keychain
        script: |
          # initialize keychain (no App Store Connect integration required)
          keychain initialize || true
      # Skipping automatic fetch of signing files so build can run without App Store Connect
      - name: Prepare code signing (skipped automatic fetch)
        script: |
          echo "Skipping app-store-connect signing fetch. Ensure you have required signing files if you need a signed IPA."
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Install pods (non-fatal)
        script: |
          # Install CocoaPods but don't fail the whole build on non-critical pod warnings/errors
          set -e
          find . -name "Podfile" -execdir pod install \; || echo "pod install exited with non-zero status but continuing"
      - name: Flutter build ipa (unsigned)
        script: |
          # Build unsigned IPA so Codemagic can produce an artifact without App Store Connect
          flutter build ipa --release --no-codesign || flutter build ios --release --no-codesign
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
    # Publishing to App Store Connect is disabled in this config to avoid missing integration errors.